{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_test_name": {
            "defaultValue": "test",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_azureblob_1_name": {
            "defaultValue": "azureblob-1",
            "type": "String"
        },
        "connections_azureblob_2_name": {
            "defaultValue": "azureblob-2",
            "type": "String"
        },
        "storageAccounts_logicappstest_name": {
            "defaultValue": "logicappstest",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_logicappstest_name')]",
            "location": "uksouth",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "Azure Services",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "uksouth",
            "properties": {
                "displayName": "testingtodelete",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/088de0df-dacc-46b9-8e67-f92a2004e935/providers/Microsoft.Web/locations/uksouth/managedApis/azureblob]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_1_name')]",
            "location": "uksouth",
            "properties": {
                "displayName": "logicapptestconnection",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/088de0df-dacc-46b9-8e67-f92a2004e935/providers/Microsoft.Web/locations/uksouth/managedApis/azureblob"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_2_name')]",
            "location": "uksouth",
            "properties": {
                "displayName": "imgtest",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/088de0df-dacc-46b9-8e67-f92a2004e935/providers/Microsoft.Web/locations/uksouth/managedApis/azureblob"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_logicappstest_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_logicappstest_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_test_name')]",
            "location": "uksouth",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_2_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "timeZone": "GMT Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Filter_array": {
                            "runAfter": {
                                "List_blobs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('List_blobs')?['value']",
                                "where": "@less(item()?['LastModified'], addMinutes(utcNow(), -30))"
                            }
                        },
                        "Filter_array_2": {
                            "runAfter": {
                                "List_blobs_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('List_blobs_2')?['value']",
                                "where": "@less(item()?['LastModified'], addMinutes(utcNow(), -40))"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Filter_array')",
                            "actions": {
                                "Delete_blob": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(items('For_each')?['Path']))}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each2": {
                            "foreach": "@body('Filter_array_2')",
                            "actions": {
                                "Delete_blob_2": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(items('For_each2')?['Path']))}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "List_blobs": {
                            "runAfter": {},
                            "metadata": {
                                "JTJmdGVzdDE=": "[concat('/', parameters('workflows_test_name'), '1')]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmdGVzdDE='))}",
                                "queries": {
                                    "nextPageMarker": "",
                                    "useFlatListing": false
                                }
                            }
                        },
                        "List_blobs_2": {
                            "runAfter": {},
                            "metadata": {
                                "JTJmdGVzdDI=": "[concat('/', parameters('workflows_test_name'), '2')]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmdGVzdDI='))}",
                                "queries": {
                                    "nextPageMarker": "",
                                    "useFlatListing": false
                                }
                            }
                        },
                        "List_blobs_3": {
                            "runAfter": {},
                            "metadata": {
                                "JTJmaW1hZ2Vz": "/images"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmaW1hZ2Vz'))}",
                                "queries": {
                                    "nextPageMarker": "",
                                    "useFlatListing": false
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/088de0df-dacc-46b9-8e67-f92a2004e935/providers/Microsoft.Web/locations/uksouth/managedApis/azureblob"
                            },
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_2_name'))]",
                                "connectionName": "azureblob-2",
                                "id": "/subscriptions/088de0df-dacc-46b9-8e67-f92a2004e935/providers/Microsoft.Web/locations/uksouth/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_logicappstest_name'), '/default/test1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_logicappstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_logicappstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_logicappstest_name'), '/default/test2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_logicappstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_logicappstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_logicappstest_name'), '/default/test3')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_logicappstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_logicappstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}